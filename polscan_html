#!/bin/bash

BASE=$(dirname $0)
BASE=$(readlink -e $BASE)
if [ "$BASE" == "/usr/bin" ]; then
	CONF_DIR=/etc/polscan/
	LIB_DIR=/usr/lib/polscan/
else
	CONF_DIR=${BASE}/etc/
	LIB_DIR=${BASE}/lib
fi

DATE=$1		# Allow passing date

source $LIB_DIR/polscan-common.inc

# Prepare output dir
if [ ! -d $RESULT_DIR ]; then
	echo "ERROR: No results found in '$RESULT_DIR'"
	exit 1
fi
if [ ! -d "$JSON_DIR" ]; then
	mkdir -p "$JSON_DIR" || exit 1
fi
cd $RESULT_DIR || exit 1

###############################################################################
# Helper method to write JSON, solves the issue of forbidden final comma in
# array lists...
#
# $1	file name
# $2	root key
# $3	extra data for root key
###############################################################################
write_json() {
	name=$1
	root=$2

	echo "Writing $name.json..."
	(
		echo '{"date": "'$DATE'", "'$root'":['
		cat | sed 's/[^[:print:]]//g'
		echo -n "]}"
	) | sed 's/,\]/]/g' >${JSON_DIR}/${name}.json
}

# Do regroup results by group and policy
declare -A group_warnings
declare -A group_errors
declare -A policy_warnings
declare -A policy_errors

groups=$(
	egrep -h "^[a-zA-Z0-9][[a-zA-Z0-9]* (OK|WARNING|FAILED) " ./* |\
	awk '{print $1}' | sort -u
)
echo "Found results for:" $groups

for g in $groups; do
	(
		ls | xargs -n1 grep -H "^$g " |\
		sed 's/:/ /' |\
		while read host group severity details; do
			policy=${details/#|||/}
			policy=${policy/|||*/}
			message=${details/*|||/}
			echo -n '{"host": "'$host'", "severity": "'$severity'", "policy": "'$policy'", "message": "'${message/\"/\'}'"},'
		done
	) | write_json $g 'group": "'$g'", "results'
done

# Global results
(
	while read host group severity details; do
		policy=${details/|||.*/}
		policy=${policy/|||/}
		message=${details/.*|||/}
		echo -n '{"host": "'$host'", "group": "'$group'", "severity": "'$severity'", "policy": "'$policy'", "message": "'${message/\"/\'}'"},'
	done < <(
		ls | xargs -I {} -n1 sed '/^[^ ][^ ]* OK /d; s/^/{} /;' {}
	)
) | write_json all results

# Statistics
(
	for g in $groups; do
		failed=$(ls | xargs -n1 grep "^$g FAILED " | wc -l)
		warning=$(ls | xargs -n1 grep "^$g WARNING " | wc -l)
		count=$(ls | xargs -n1 grep "^$g " | wc -l)
		echo -n '{"group": "'$g'", "WARNING": '${warning-0}', "FAILED": '${failed-0}', "count": '${count-0}'},'
	done
	for s in $(cat ${REMOTE_SCANNERS_FILE}); do
		group=`get_policy_group "$LIB_DIR/scanners/$s"`
		name=`get_policy_name "$LIB_DIR/scanners/$s"`
		description=`get_policy_description "$LIB_DIR/scanners/$s"`
		echo -n '{"policy": "'$name'", "parent": "'$group'", "description": "'$description'"},'
	done
) | write_json overview overview

if [ $LATEST == 1 ]; then
	# Link latest results
	rm "$RESULT_BASE_DIR/latest"
	cd $RESULT_BASE_DIR && ln -s "json/$DATE" latest
fi

echo "Done."
